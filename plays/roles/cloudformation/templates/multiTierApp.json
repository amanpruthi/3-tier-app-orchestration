{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Resources": {
    "VPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.90.0.0/16",
        "InstanceTenancy": "default",
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true",
        "Tags": [
          {
            "Key": "Name",
            "Value": "iamdevops"
          }
        ]
      }
    },
    "PrivateSubnet1a": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.90.0.0/20",
        "AvailabilityZone": "us-east-1a",
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "iamdevops-private-1a"
          }
        ]
      }
    },
    "PublicSubnet1a": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.90.16.0/20",
        "AvailabilityZone": "us-east-1a",
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "iamdevops-public-1a"
          }
        ]
      }
    },
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "iamdevops-IGW"
          }
        ]
      }
    },
    "NatGateway": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "NatElasticIp",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "PublicSubnet1a"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "iamdevops-NAT"
          }
        ]
      }
    },
    "DhcpOptions": {
      "Type": "AWS::EC2::DHCPOptions",
      "Properties": {
        "DomainName": "ec2.internal",
        "DomainNameServers": [
          "AmazonProvidedDNS"
        ]
      }
    },
    "NetworkAcl": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        }
      }
    },
    "PublicRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "iamdevops-publicRouteTable"
          }
        ]
      }
    },
    "PrivateRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "iamdevops-privateRouteTable"
          }
        ]
      }
    },
    "NatElasticIp": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc"
      }
    },
    "JumpboxEc2Machine": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "EbsOptimized": "true",
        "ImageId": "ami-0330807a85383cfc5",
        "InstanceType": "t3a.nano",
        "KeyName": "iamdevops_jumpbox",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": "iamdevops-jumpbox"
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "PublicSubnet1a"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.90.31.32",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "SecurityGroupJumpbox"
              }
            ]
          }
        ]
      }
    },
    "BackendEc2Machine": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "EbsOptimized": "true",
        "ImageId": "ami-0330807a85383cfc5",
        "InstanceType": "t3a.micro",
        "KeyName": "iamdevops_internal",
        "Monitoring": "false",
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash -xe\n",
                "sleep 300 \n",
                "/opt/aws/bin/cfn-signal -e $? ",
                "         --stack ",
                {
                  "Ref": "AWS::StackName"
                },
                "         --resource BackendEc2Machine ",
                "         --region ",
                {
                  "Ref": "AWS::Region"
                },
                "\n"
              ]
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "iamdevops-BE"
          },
          {
            "Key": "App",
            "Value": "BE"
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "PrivateSubnet1a"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.90.12.24",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "SecurityGroupBE"
              }
            ]
          }
        ]
      },
      "CreationPolicy": {
        "ResourceSignal": {
          "Count": 1,
          "Timeout": "PT15M"
        }
      }
    },
    "BackendDbMachine": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "EbsOptimized": "true",
        "ImageId": "ami-0330807a85383cfc5",
        "InstanceType": "t3a.micro",
        "KeyName": "iamdevops_internal",
        "Monitoring": "false",
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash -xe\n",
                "sleep 300 \n",
                "/opt/aws/bin/cfn-signal -e $? ",
                "         --stack ",
                {
                  "Ref": "AWS::StackName"
                },
                "         --resource BackendDbMachine ",
                "         --region ",
                {
                  "Ref": "AWS::Region"
                },
                "\n"
              ]
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "iamdevops-DB"
          },
          {
            "Key": "App",
            "Value": "DB"
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "PrivateSubnet1a"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.90.8.174",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "SecurityGroupDB"
              }
            ]
          }
        ]
      },
      "CreationPolicy": {
        "ResourceSignal": {
          "Count": 1,
          "Timeout": "PT15M"
        }
      }
    },
    "FrontendMachine": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "EbsOptimized": "true",
        "ImageId": "ami-0330807a85383cfc5",
        "InstanceType": "t3a.micro",
        "KeyName": "iamdevops_internal",
        "Monitoring": "false",
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash -xe\n",
                "sleep 300 \n",
                "/opt/aws/bin/cfn-signal -e $? ",
                "         --stack ",
                {
                  "Ref": "AWS::StackName"
                },
                "         --resource FrontendMachine ",
                "         --region ",
                {
                  "Ref": "AWS::Region"
                },
                "\n"
              ]
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "iamdevops-FE"
          },
          {
            "Key": "App",
            "Value": "FE"
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "PublicSubnet1a"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.90.26.34",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "SecurityGroupFE"
              }
            ],
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
      "CreationPolicy": {
        "ResourceSignal": {
          "Count": 1,
          "Timeout": "PT15M"
        }
      }
    },
    "SecurityGroupFE": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "iamdevops-FE",
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "iamdevops-FE"
          }
        ]
      }
    },
    "SecurityGroupDB": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "iamdevops-DB",
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "iamdevops-DB"
          }
        ]
      }
    },
    "SecurityGroupDefault": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "default VPC security group",
        "VpcId": {
          "Ref": "VPC"
        }
      }
    },
    "SecurityGroupBE": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "iamdevops-BE",
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "iamdevops-BE"
          }
        ]
      }
    },
    "SecurityGroupELB": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "iamdevops-ELB",
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "iamdevops-ELB"
          }
        ]
      }
    },
    "SecurityGroupJumpbox": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "iamdevops-jumpbox",
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "iamdevops-jumpbox"
          }
        ]
      }
    },
    "NetworkAclEntry1": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": "true",
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "NetworkAcl"
        }
      }
    },
    "NetworkAclEntry2": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "NetworkAcl"
        }
      }
    },
    "SubnetAclAssociation1": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "NetworkAcl"
        },
        "SubnetId": {
          "Ref": "PrivateSubnet1a"
        }
      }
    },
    "SubnetAclAssociation2": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "NetworkAcl"
        },
        "SubnetId": {
          "Ref": "PublicSubnet1a"
        }
      }
    },
    "InternetGatewayAttachment": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "InternetGatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },
    "SubnetPublicRoute1": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        },
        "SubnetId": {
          "Ref": "PublicSubnet1a"
        }
      }
    },
    "SubnetPrivateRoute1": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "PrivateRouteTable"
        },
        "SubnetId": {
          "Ref": "PrivateSubnet1a"
        }
      }
    },
    "PublicRoute1": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        },
        "GatewayId": {
          "Ref": "InternetGateway"
        }
      },
      "DependsOn": "InternetGatewayAttachment"
    },
    "PrivateRoute1": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {
          "Ref": "PrivateRouteTable"
        },
        "NatGatewayId": {
          "Ref": "NatGateway"
        }
      }
    },
    "VpcDhcpAssociation": {
      "Type": "AWS::EC2::VPCDHCPOptionsAssociation",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "DhcpOptionsId": {
          "Ref": "DhcpOptions"
        }
      }
    },
    "JumpboxEipAssociation": {
      "Type": "AWS::EC2::EIPAssociation",
      "Properties": {
        "AllocationId": "eipalloc-03d83891ad6eb599c",
        "InstanceId": {
          "Ref": "JumpboxEc2Machine"
        }
      }
    },
    "SecurityGroupFEIn1": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "SecurityGroupFE"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "SourceSecurityGroupId": {
          "Ref": "SecurityGroupJumpbox"
        },
        "SourceSecurityGroupOwnerId": "153145759379"
      }
    },
    "SecurityGroupFEIn2": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "SecurityGroupFE"
        },
        "IpProtocol": "tcp",
        "FromPort": "8097",
        "ToPort": "8097",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "SecurityGroupDBIn1": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "SecurityGroupDB"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "SourceSecurityGroupId": {
          "Ref": "SecurityGroupJumpbox"
        },
        "SourceSecurityGroupOwnerId": "153145759379"
      }
    },
    "SecurityGroupDBIn2": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "SecurityGroupDB"
        },
        "IpProtocol": "tcp",
        "FromPort": "3306",
        "ToPort": "3306",
        "SourceSecurityGroupId": {
          "Ref": "SecurityGroupBE"
        },
        "SourceSecurityGroupOwnerId": "153145759379"
      }
    },
    "SecurityGroupDefaultIn1": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "SecurityGroupDefault"
        },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": {
          "Ref": "SecurityGroupDefault"
        },
        "SourceSecurityGroupOwnerId": "153145759379"
      }
    },
    "SecurityGroupBEIn1": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "SecurityGroupBE"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "SourceSecurityGroupId": {
          "Ref": "SecurityGroupJumpbox"
        },
        "SourceSecurityGroupOwnerId": "153145759379"
      }
    },
    "SecurityGroupBEIn2": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "SecurityGroupBE"
        },
        "IpProtocol": "tcp",
        "FromPort": "8098",
        "ToPort": "8098",
        "SourceSecurityGroupId": {
          "Ref": "SecurityGroupFE"
        },
        "SourceSecurityGroupOwnerId": "153145759379"
      }
    },
    "SecurityGroupELBIn1": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "SecurityGroupELB"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "SecurityGroupELBIn2": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "SecurityGroupELB"
        },
        "IpProtocol": "tcp",
        "FromPort": "443",
        "ToPort": "443",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "SecurityGroupJumpboxIn1": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "SecurityGroupJumpbox"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "SecurityGroupFEOut1": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "SecurityGroupFE"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "SecurityGroupDBOut1": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "SecurityGroupDB"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "SecurityGroupDefaultOut1": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "SecurityGroupDefault"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "SecurityGroupBEOut1": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "SecurityGroupBE"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "SecurityGroupELBOut1": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "SecurityGroupELB"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "SecurityGroupJumpboxOut1": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "SecurityGroupJumpbox"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    }
  },
  "Description": "multi-tier-app"
}
